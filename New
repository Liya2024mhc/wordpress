https://codecanel.com/how-do-i-create-a-custom-slider-plugin-in-wordpress/
<?php
/**
 * Theme functions and definitions
 *
 * @package HelloElementor
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit; // Exit if accessed directly.
}

define( 'HELLO_ELEMENTOR_VERSION', '3.2.1' );

if ( ! isset( $content_width ) ) {
	$content_width = 800; // Pixels.
}

if ( ! function_exists( 'hello_elementor_setup' ) ) {
	/**
	 * Set up theme support.
	 *
	 * @return void
	 */
	function hello_elementor_setup() {
		if ( is_admin() ) {
			hello_maybe_update_theme_version_in_db();
		}

		if ( apply_filters( 'hello_elementor_register_menus', true ) ) {
			register_nav_menus( [ 'menu-1' => esc_html__( 'Header', 'hello-elementor' ) ] );
			register_nav_menus( [ 'menu-2' => esc_html__( 'Footer', 'hello-elementor' ) ] );
		}

		if ( apply_filters( 'hello_elementor_post_type_support', true ) ) {
			add_post_type_support( 'page', 'excerpt' );
		}

		if ( apply_filters( 'hello_elementor_add_theme_support', true ) ) {
			add_theme_support( 'post-thumbnails' );
			add_theme_support( 'automatic-feed-links' );
			add_theme_support( 'title-tag' );
			add_theme_support(
				'html5',
				[
					'search-form',
					'comment-form',
					'comment-list',
					'gallery',
					'caption',
					'script',
					'style',
				]
			);
			add_theme_support(
				'custom-logo',
				[
					'height'      => 100,
					'width'       => 350,
					'flex-height' => true,
					'flex-width'  => true,
				]
			);
			add_theme_support( 'align-wide' );
			add_theme_support( 'responsive-embeds' );

			/*
			 * Editor Styles
			 */
			add_theme_support( 'editor-styles' );
			add_editor_style( 'editor-styles.css' );

			/*
			 * WooCommerce.
			 */
			if ( apply_filters( 'hello_elementor_add_woocommerce_support', true ) ) {
				// WooCommerce in general.
				add_theme_support( 'woocommerce' );
				// Enabling WooCommerce product gallery features (are off by default since WC 3.0.0).
				// zoom.
				add_theme_support( 'wc-product-gallery-zoom' );
				// lightbox.
				add_theme_support( 'wc-product-gallery-lightbox' );
				// swipe.
				add_theme_support( 'wc-product-gallery-slider' );
			}
		}
	}
}
add_action( 'after_setup_theme', 'hello_elementor_setup' );

function hello_maybe_update_theme_version_in_db() {
	$theme_version_option_name = 'hello_theme_version';
	// The theme version saved in the database.
	$hello_theme_db_version = get_option( $theme_version_option_name );

	// If the 'hello_theme_version' option does not exist in the DB, or the version needs to be updated, do the update.
	if ( ! $hello_theme_db_version || version_compare( $hello_theme_db_version, HELLO_ELEMENTOR_VERSION, '<' ) ) {
		update_option( $theme_version_option_name, HELLO_ELEMENTOR_VERSION );
	}
}

if ( ! function_exists( 'hello_elementor_display_header_footer' ) ) {
	/**
	 * Check whether to display header footer.
	 *
	 * @return bool
	 */
	function hello_elementor_display_header_footer() {
		$hello_elementor_header_footer = true;

		return apply_filters( 'hello_elementor_header_footer', $hello_elementor_header_footer );
	}
}

if ( ! function_exists( 'hello_elementor_scripts_styles' ) ) {
	/**
	 * Theme Scripts & Styles.
	 *
	 * @return void
	 */
	function hello_elementor_scripts_styles() {
		$min_suffix = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';

		if ( apply_filters( 'hello_elementor_enqueue_style', true ) ) {
			wp_enqueue_style(
				'hello-elementor',
				get_template_directory_uri() . '/style' . $min_suffix . '.css',
				[],
				HELLO_ELEMENTOR_VERSION
			);
		}

		if ( apply_filters( 'hello_elementor_enqueue_theme_style', true ) ) {
			wp_enqueue_style(
				'hello-elementor-theme-style',
				get_template_directory_uri() . '/theme' . $min_suffix . '.css',
				[],
				HELLO_ELEMENTOR_VERSION
			);
		}

		if ( hello_elementor_display_header_footer() ) {
			wp_enqueue_style(
				'hello-elementor-header-footer',
				get_template_directory_uri() . '/header-footer' . $min_suffix . '.css',
				[],
				HELLO_ELEMENTOR_VERSION
			);
		}
	}
}
add_action( 'wp_enqueue_scripts', 'hello_elementor_scripts_styles' );

if ( ! function_exists( 'hello_elementor_register_elementor_locations' ) ) {
	/**
	 * Register Elementor Locations.
	 *
	 * @param ElementorPro\Modules\ThemeBuilder\Classes\Locations_Manager $elementor_theme_manager theme manager.
	 *
	 * @return void
	 */
	function hello_elementor_register_elementor_locations( $elementor_theme_manager ) {
		if ( apply_filters( 'hello_elementor_register_elementor_locations', true ) ) {
			$elementor_theme_manager->register_all_core_location();
		}
	}
}
add_action( 'elementor/theme/register_locations', 'hello_elementor_register_elementor_locations' );

if ( ! function_exists( 'hello_elementor_content_width' ) ) {
	/**
	 * Set default content width.
	 *
	 * @return void
	 */
	function hello_elementor_content_width() {
		$GLOBALS['content_width'] = apply_filters( 'hello_elementor_content_width', 800 );
	}
}
add_action( 'after_setup_theme', 'hello_elementor_content_width', 0 );

if ( ! function_exists( 'hello_elementor_add_description_meta_tag' ) ) {
	/**
	 * Add description meta tag with excerpt text.
	 *
	 * @return void
	 */
	function hello_elementor_add_description_meta_tag() {
		if ( ! apply_filters( 'hello_elementor_description_meta_tag', true ) ) {
			return;
		}

		if ( ! is_singular() ) {
			return;
		}

		$post = get_queried_object();
		if ( empty( $post->post_excerpt ) ) {
			return;
		}

		echo '<meta name="description" content="' . esc_attr( wp_strip_all_tags( $post->post_excerpt ) ) . '">' . "\n";
	}
}
add_action( 'wp_head', 'hello_elementor_add_description_meta_tag' );

// Admin notice
if ( is_admin() ) {
	require get_template_directory() . '/includes/admin-functions.php';
}

// Settings page
require get_template_directory() . '/includes/settings-functions.php';

// Header & footer styling option, inside Elementor
require get_template_directory() . '/includes/elementor-functions.php';

if ( ! function_exists( 'hello_elementor_customizer' ) ) {
	// Customizer controls
	function hello_elementor_customizer() {
		if ( ! is_customize_preview() ) {
			return;
		}

		if ( ! hello_elementor_display_header_footer() ) {
			return;
		}

		require get_template_directory() . '/includes/customizer-functions.php';
	}
}
add_action( 'init', 'hello_elementor_customizer' );

if ( ! function_exists( 'hello_elementor_check_hide_title' ) ) {
	/**
	 * Check whether to display the page title.
	 *
	 * @param bool $val default value.
	 *
	 * @return bool
	 */
	function hello_elementor_check_hide_title( $val ) {
		if ( defined( 'ELEMENTOR_VERSION' ) ) {
			$current_doc = Elementor\Plugin::instance()->documents->get( get_the_ID() );
			if ( $current_doc && 'yes' === $current_doc->get_settings( 'hide_title' ) ) {
				$val = false;
			}
		}
		return $val;
	}
}
add_filter( 'hello_elementor_page_title', 'hello_elementor_check_hide_title' );

/**
 * BC:
 * In v2.7.0 the theme removed the `hello_elementor_body_open()` from `header.php` replacing it with `wp_body_open()`.
 * The following code prevents fatal errors in child themes that still use this function.
 */
if ( ! function_exists( 'hello_elementor_body_open' ) ) {
	function hello_elementor_body_open() {
		wp_body_open();
	}
}

// Register Admin Menu
function custom_slider_admin_menu() {
    add_menu_page(
        'Custom Slider', // Page Title
        'Custom Slider', // Menu Title
        'manage_options', // Capability
        'custom-slider', // Menu Slug
        'custom_slider_admin_page', // Callback Function
        'dashicons-images-alt2', // Icon
        20 // Position
    );
}
add_action('admin_menu', 'custom_slider_admin_menu');

// Admin Page Content
function custom_slider_admin_page() {
    if (isset($_POST['custom_slider_images'])) {
        update_option('custom_slider_images', array_filter($_POST['custom_slider_images'])); // Save images
        echo '<div class="updated"><p>Slider images updated successfully!</p></div>';
    }

    $images = get_option('custom_slider_images', []);
    ?>
    <div class="wrap">
        <h1>Custom Slider Settings</h1>
        <form method="post">
            <table class="form-table">
                <tbody id="slider-images">
                    <?php foreach ($images as $image): ?>
                        <tr>
                            <td>
                                <input type="text" name="custom_slider_images[]" value="<?php echo esc_url($image); ?>" style="width:80%;" placeholder="Image URL">
                                <button type="button" class="remove-image button">Remove</button>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <button type="button" id="add-image" class="button">Add Image</button>
            <p><input type="submit" value="Save Changes" class="button button-primary"></p>
        </form>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addImageBtn = document.getElementById('add-image');
            const sliderImages = document.getElementById('slider-images');

            addImageBtn.addEventListener('click', function () {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>
                        <input type="text" name="custom_slider_images[]" style="width:80%;" placeholder="Image URL">
                        <button type="button" class="remove-image button">Remove</button>
                    </td>
                `;
                sliderImages.appendChild(row);
            });

            sliderImages.addEventListener('click', function (e) {
                if (e.target.classList.contains('remove-image')) {
                    e.target.closest('tr').remove();
                }
            });
        });
    </script>
    <?php
}

// Shortcode to Display the Slider
function custom_slider_shortcode() {
    $images = get_option('custom_slider_images', []);
    if (empty($images)) {
        return '<p>No images found for the slider.</p>';
    }

    ob_start();
    ?>
    <div class="custom-slider-wrapper">
<!--         Left Arrow
        <button class="slider-arrow left-arrow">&lt;</button> -->

        <!-- Slider -->
        <div class="custom-slider">
            <?php foreach ($images as $image_url): ?>
                <div class="slider-item">
                    <img src="<?php echo esc_url($image_url); ?>" alt="Slider Image">
                </div>
            <?php endforeach; ?>
        </div>

        <!-- Right Arrow -->
<!--         <button class="slider-arrow right-arrow">&gt;</button> -->
    </div>
    <?php
    return ob_get_clean();
}
add_shortcode('custom_slider', 'custom_slider_shortcode');

// Add CSS for Slider
function custom_slider_styles() {
    ?>
    <style>
        .custom-slider-wrapper {
            overflow: hidden;
            position: relative;
        }

        .custom-slider {
            display: flex;
            transition: transform 0.5s ease;
        }

        .slider-item {
            flex: 1 0 25%; /* 4 images on desktop */
            box-sizing: border-box;
            padding: 10px;
        }

        .slider-item img {
            width: 100%;
            height: 85%;
            border-radius: 0px;
        }

        @media (max-width: 1024px) {
            .slider-item {
                flex: 1 0 33.33%; /* 3 images on iPads */
            }
        }

        @media (max-width: 768px) {
            .slider-item {
                flex: 1 0 50%; /* 2 images on smaller screens */
            }
        }

        @media (max-width: 480px) {
            .slider-item {
                flex: 1 0 100%; /* 1 image on mobile */
            }
        }
    </style>
    <?php
}
add_action('wp_head', 'custom_slider_styles');

// Add JavaScript for Autoplay
function custom_slider_autoplay_script() {
    ?>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const slider = document.querySelector('.custom-slider');
            let index = 0;

            function slide() {
                const items = slider.querySelectorAll('.slider-item');
                const itemWidth = items[0].clientWidth;
                const totalWidth = items.length * itemWidth;

                index++;
                if (index * itemWidth >= totalWidth) {
                    index = 0; // Reset to first slide.
                }

                slider.style.transform = `translateX(-${index * itemWidth}px)`;
            }

            setInterval(slide, 3000); // Change slide every 3 seconds.
        });
    </script>
    <?php
}
add_action('wp_footer', 'custom_slider_autoplay_script');
?>
