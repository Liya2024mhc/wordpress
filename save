<script>
document.addEventListener("DOMContentLoaded", function() {
    // Gravity Forms field IDs (replace with your actual field IDs)
    const fields = [
        { id: "input_1_1", price: 75 },  // Small Centers
        { id: "input_1_2", price: 100 }, // Medium Centers
        { id: "input_1_3", price: 150 }, // Large Centers
        { id: "input_1_4", price: 100 }, // Vendor
        { id: "input_1_5", price: 50 },  // Family Care
        { id: "input_1_6", price: 25 },  // Parent
        { id: "input_1_7", price: 25 },  // Individual
        { id: "input_1_8", price: 25 },  // Student
    ];

    function updateTotal() {
        let total = 0;
        fields.forEach(field => {
            let input = document.getElementById(field.id);
            if (input && !input.disabled) {
                let quantity = parseInt(input.value) || 0;
                total += quantity * field.price;
            }
        });
        document.getElementById("totalPrice").textContent = "$" + total.toFixed(2);
    }

    function disableOtherFields(selectedInput) {
        fields.forEach(field => {
            let input = document.getElementById(field.id);
            if (input && input !== selectedInput) {
                input.value = "";
                input.disabled = selectedInput.value > 0;
            } else {
                input.disabled = false;
            }
        });
        updateTotal();
    }

    fields.forEach(field => {
        let input = document.getElementById(field.id);
        if (input) {
            input.addEventListener("input", function() {
                disableOtherFields(this);
            });
        }
    });
});
</script>




<?php
$person_name = $form_data['field'][6] ?? '';
$program_name = $form_data['field'][31] ?? '';
$current_date_constant = date('F j, Y');
$year = date("Y"); 

$add_centers_value = $entry['47'];

// Unserialize the value
$add_centers_array = unserialize($add_centers_value);

// // Access the nested values
// $center_name = $add_centers_array[1][45][0];

// Access the nested values and store valid center names
$center_names = [];

for ($i = 1; $i <= 200; $i++) {
    $center_key = $add_centers_array[$i][45][0] ?? null;
    if ($center_key) {
        $center_names[] = $center_key;
    }
}

$total_centers = count($center_names);

// product field label name
$product_names = array();
if ( ! empty( $form_data['field'][17] ) ) {
    $product_names[] = preg_replace( '/\s*\([^)]*\)/', '', $form_data['field'][17] );
}
if ( ! empty( $form_data['field'][16] ) ) {
    $product_names[] = preg_replace( '/\s*\([^)]*\)/', '', $form_data['field'][16] );
}
if ( ! empty( $form_data['field'][20] ) ) {
    $product_names[] = preg_replace( '/\s*\([^)]*\)/', '', $form_data['field'][20] );
}
if ( ! empty( $form_data['field'][18] ) ) {
    $product_names[] = preg_replace( '/\s*\([^)]*\)/', '', $form_data['field'][18] );
}
if ( ! empty( $form_data['field'][25] ) ) {
    $product_names[] = preg_replace( '/\s*\([^)]*\)/', '', $form_data['field'][25] );
}
if ( ! empty( $form_data['field'][24] ) ) {
    $product_names[] = preg_replace( '/\s*\([^)]*\)/', '', $form_data['field'][24] );
}
if ( ! empty( $form_data['field'][50] ) ) {
    $product_names[] = preg_replace( '/\s*\([^)]*\)/', '', $form_data['field'][50] );
}
if ( ! empty( $form_data['field'][49] ) ) {
    $product_names[] = preg_replace( '/\s*\([^)]*\)/', '', $form_data['field'][49] );
}



?>





<?php
$person_name = $form_data['field'][6] ?? '';
$program_name = $form_data['field'][31] ?? '';
$current_date_constant = date('F j, Y');
$year = date("Y"); 

// Membership field values - should match JavaScript
$membership_values = [
    'Small Centers' => $entry['1'] ?? '',
    'Medium Centers' => $entry['2'] ?? '',
    'Large Centers' => $entry['3'] ?? '',
    'Vendor' => $entry['4'] ?? '',
    'Family Child Care Home' => $entry['5'] ?? '',
    'Parent' => $entry['6'] ?? '',
    'Individual' => $entry['7'] ?? '',
    'Student' => $entry['8'] ?? '',
];

// Get selected membership
$selected_membership = '';
foreach ($membership_values as $name => $value) {
    if (!empty($value)) {
        $selected_membership = $name;
        break;
    }
}

// Get additional center names
$add_centers_value = $entry['47'] ?? '';
$add_centers_array = unserialize($add_centers_value);
$center_names = [];

for ($i = 1; $i <= 200; $i++) {
    $center_key = $add_centers_array[$i][45][0] ?? null;
    if ($center_key) {
        $center_names[] = $center_key;
    }
}
$total_centers = count($center_names);

// Extract product names dynamically
$product_field_ids = [17, 16, 20, 18, 25, 24, 50, 49];
$product_names = [];

foreach ($product_field_ids as $field_id) {
    if (!empty($form_data['field'][$field_id])) {
        $product_names[] = preg_replace('/\s*\([^)]*\)/', '', $form_data['field'][$field_id]);
    }
}

// Generate Certificate Content
$certificate_content = "<h2>Certificate of Membership</h2>";
$certificate_content .= "<p>This certifies that <strong>$person_name</strong> is a member of <strong>$program_name</strong>.</p>";
$certificate_content .= "<p>Membership Type: <strong>$selected_membership</strong></p>";
$certificate_content .= "<p>Date: <strong>$current_date_constant</strong></p>";

// Save the certificate as a file (or send via email)
file_put_contents(get_template_directory() . "/certificates/certificate_$entry[id].html", $certificate_content);
?>
